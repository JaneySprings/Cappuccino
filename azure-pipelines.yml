trigger:
  batch: true
  branches:
    include:
    - master

pr:
  branches:
    include:
    - master


stages:
  - stage: CoreTests
    dependsOn: []
    jobs:
      - job: Build
        pool:
          vmImage: 'macos-latest'
        timeoutInMinutes: 5
        steps:
          - script: curl -sSL https://dot.net/v1/dotnet-install.sh | bash /dev/stdin -Channel 7.0.1xx -Quality preview
            displayName: 'Install .NET 7.0.1xx Preview'
          - script: dotnet tool restore
            displayName: 'DotNet Restore'
          - script: dotnet cake --target=network-build
            displayName: 'Network Build' 
          - script: dotnet cake --target=network-test --configuration=release
            displayName: 'Network Test'
          - task: PublishTestResults@2
            continueOnError: true
            inputs:
              testResultsFormat: 'VSTest'
              testResultsFiles: 'Artifacts/*.trx'
              failTaskOnFailedTests: true


  - stage: Publish
    condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/cappuccino_')
    dependsOn: []
    jobs:
      - job: Publish
        pool:
          vmImage: 'macos-latest'
        timeoutInMinutes: 10
        variables:
          - name : version
            value: $[ replace(variables['Build.SourceBranch'], 'refs/tags/cappuccino_', '') ] 
          - group: Tokens
        steps:
          - task: DownloadSecureFile@1
            name: strongKey
            displayName: 'Download Strong Key'
            inputs:
              secureFile: 'key.snk'
          - script: curl -sSL https://dot.net/v1/dotnet-install.sh | bash /dev/stdin -Channel 7.0.1xx -Quality preview
            displayName: 'Install .NET 7.0.1xx Preview'
          - script: dotnet tool restore
            displayName: 'DotNet Restore'
          # Core
          - script: dotnet cake --target=network-build --up-version=$(version) --signkey=$(strongKey.secureFilePath)
            displayName: 'Network Build'
          - publish: 'Artifacts/Publish'
            displayName: 'Publish Artifacts'
            artifact: Artifacts
          # - script: dotnet cake --target=network-publish --apikey=$(NUGET_API_KEY)
          #   displayName: 'Network Publish'
          # iOS
          - script: dotnet workload install ios
            displayName: 'Install iOS Workload'
          - script: dotnet cake --target=ios --up-version=$(version) --signkey=$(strongKey.secureFilePath)
            displayName: 'iOS Build'
          - publish: 'Artifacts/Publish'
            displayName: 'Publish Artifacts'
            artifact: Artifacts
          # Android

